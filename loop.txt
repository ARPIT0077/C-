 // while loop

1. while loop 

// initial condition or init 
 while(condition is true){

    // execute some stuff
    // update

 }

 Example 
 int cal = 0;
   while (cal<10) {
    cout << "Running a step AND burning " << (cal+1)<<endl; // work 10 times
    cal = cal + 1; // if you forget this condition the loop will run infinite times

   }
2. For loop

for(initial condition ; stopping condition ; update statement){

    // execute some stuff

}
Example
for(int calories = 0 ; calories < 100 ; calories = calories + 1){

    // execute some stuff
    cout << "Run 1 step";
}

* NOTE - FOR WHILE EQUIVALENCE 
while/for behave as the same way

3. BREAK
 break statement can also be used to jump out of the window

  while (calories<30){

    cout << "runnig and burnig " << (calories) << endl ;
    if (calories ==gf_calls_up){
        // need to stop there 
        break;
    }
    calories++;
   }
 4. continue
 The continue statement breaks one iteration (in the loop), if a specified condition occurs, 
 and continues with the next iteration in the loop.  

 for (int i = 0; i < 10; i++) {
    if (i == 4) {
      continue;
    }
    cout << i << "\n";
  }   
5. do while loop
The do/while loop is a variant of the while loop. This loop will execute the code block once, 
before checking if the condition is true, then it will repeat the loop as long as the condition is true.

do {
  // code block to be executed
}
while (condition);

example
int money = 5 ;
     do
     {
         cout << "shopping and money left  "<< money << endl;
         money--;
     } while (money > 0 );

6. Nested loop

nested loop means a loop statement inside another loop



// nested loop
  for (int i = 0; i< R ; i++) {
    // print col no of numbers 
  for (int j = 0; j < C ; j++)
  {
    cout << val << " ";
    val = val + 1;
  }
  // new line 
  cout << endl;
  